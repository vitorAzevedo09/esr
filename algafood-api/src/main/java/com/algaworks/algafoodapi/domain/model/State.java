package com.algaworks.algafoodapi.domain.model;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;

/**
 * Represents a geographical state or region within a country.
 * Each state has a unique identifier, a name, and may contain multiple cities.
 *
 * <p>
 * The {@code id} field is automatically generated by the database and serves
 * as the primary key for identifying states.
 * </p>
 *
 * <p>
 * The {@code name} field contains the name of the state and should not be null.
 * It provides a descriptive name for the state or region.
 * </p>
 *
 * <p>
 * The {@code cities} field represents a collection of cities within the state.
 * It is associated with the {@link City} class and may be an empty list.
 * </p>
 *
 * <p>
 * Example usage:
 * 
 * <pre>{@code
 * State state = new State();
 * state.setName("California");
 * City city1 = new City();
 * city1.setName("Los Angeles");
 * City city2 = new City();
 * city2.setName("San Francisco");
 * state.getCities().add(city1);
 * state.getCities().add(city2);
 * stateRepository.save(state);
 * }</pre>
 * </p>
 *
 * @Entity(name = "states")
 */
@Entity(name = "states")
public class State {

    /**
     * The unique identifier for the state.
     * This field is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Valid
    @NotNull
    private Long id;

    /**
     * The name of the state or region.
     * It cannot be null and should provide a descriptive name.
     */
    @NotNull
    private String name;

    /**
     * The collection of cities within the state.
     * It may be an empty list and is associated with the {@link City} class.
     */
    @OneToMany(mappedBy = "state")
    private List<City> cities = new ArrayList<City>();

    public State() {
    }

    public State(Long id, String name) {
        this.id = id;
        this.name = name;
    }

    /**
     * Retrieves the unique identifier of the state.
     *
     * @return The state's unique identifier.
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the state.
     *
     * @param id The state's unique identifier.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Retrieves the name of the state or region.
     *
     * @return The name of the state or region.
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the state or region.
     *
     * @param name The name of the state or region.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Retrieves the collection of cities within the state.
     *
     * @return The collection of cities within the state.
     */
    public List<City> getCities() {
        return cities;
    }

    /**
     * Sets the collection of cities within the state.
     *
     * @param cities The collection of cities within the state.
     */
    public void setCities(List<City> cities) {
        this.cities = cities;
    }
}
